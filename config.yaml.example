# ----------------------------------------------------
# BLE Scanner Settings
# ----------------------------------------------------
scanner:
  # Time in seconds between the start of each scan cycle.
  # Default: 10
  cycle: 10

  # Time in seconds the scanner will actively listen for BLE advertisements.
  # This value must be less than or equal to `cycle`.
  # Default: 3
  duration: 3

  # Bluetooth adapter number to use (e.g., 0 for hci0).
  # Default: "0"
  interface: "0"

# ----------------------------------------------------
# Automations
# ----------------------------------------------------
automations:
  - name: "Turn on Fan when Temperature Rises"
    # Optional: Mutes this automation for 10 minutes after it triggers.
    cooldown: "10m"
    # "if" block: Defines the trigger and conditions.
    if:
      # Source of the event. "switchbot" for real-time state changes.
      source: "switchbot"
      # Conditions to identify the target device(s).
      device:
        modelName: "Meter"
      # Conditions based on the device's state.
      state:
        # Triggers when the temperature is greater than 28.
        temperature: "> 28.0"
    # "then" block: Defines the action to be executed.
    then:
      type: "shell_command"
      command: "echo 'High temperature detected ({temperature}Â°C), turning on fan...'"

  - name: "Button Press Notification"
    # Mute for 2 seconds to prevent bouncing/chattering effects.
    cooldown: "2s"
    if:
      source: "switchbot"
      device:
        modelName: "Bot"
        address: "XX:XX:XX:XX:XX:AA"
      state:
        isOn: True
    then:
      type: "webhook"
      url: "https://example.com/notify"
      payload:
        message: "Button on device {address} was pressed."
      # Optional: Add custom headers for authentication, etc.
      headers:
        Content-Type: "application/json"
        Authorization: "Bearer YOUR_SECRET_TOKEN"

  - name: "Turn off Lights if No Motion for 5 Minutes"
    if:
      # "switchbot_timer" triggers when a state is sustained for a duration.
      source: "switchbot_timer"
      # The duration the state must be continuously met.
      duration: "5m"
      device:
        modelName: "WoPresence"
        address: "YY:YY:YY:YY:YY:BB"
      state:
        motion_detected: False
    then:
      type: "shell_command"
      command: "echo 'No motion for 5 minutes, turning off lights.'"

  - name: "Alert if Door is Open for 10 Minutes"
    cooldown: "1h"
    if:
      source: "switchbot_timer"
      duration: "10m"
      device:
        modelName: "WoContact"
      state:
        contact_open: True
    then:
      type: "webhook"
      url: "https://example.com/alert"
      payload:
        message: "Warning: Device {address} has been open for 10 minutes!"

# ----------------------------------------------------
# Prometheus Exporter Settings
# ----------------------------------------------------
prometheus_exporter:
  # Enable/disable the exporter feature.
  # Default: true
  enabled: true

  # Port for the exporter to listen on.
  # Default: 8000
  port: 8000

  # Specify the devices and metrics to target.
  target:
    # Only devices with an address in this list will be targeted.
    # If this key is missing or the list is empty, all discovered devices will be targeted.
    addresses:
      #  - "00:00:5E:00:53:00"
      #  - "00:00:5E:00:53:01"

    # Only metrics in this list will be exported.
    # If this key is missing or the list is empty, all available metrics will be exported.
    metrics:
      # - "temperature"
      # - "humidity"
      # - "battery"
      # - "rssi"

# ----------------------------------------------------
# Logging Settings
# ----------------------------------------------------
logging:
  # Default log level for the application: DEBUG, INFO, WARNING, ERROR
  # This is overridden by the --debug flag.
  level: "INFO"

  # Log format, using Python's logging format syntax.
  format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"

  # Set specific log levels for noisy libraries.
  # This is useful for debugging specific components without enabling global debug.
  # These settings are ignored if the --debug flag is used.
  loggers:
    bleak: "WARNING"
    # Example: Set bleak to DEBUG for in-depth BLE troubleshooting
    # bleak: "DEBUG"
    # Example: Enable trigger execution logs for debugging automations
    # switchbot_actions.triggers: "DEBUG"
